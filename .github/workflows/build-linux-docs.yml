name: build-linux-docs

on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows for the workflow to be manually started through the GitHub UI
  workflow_dispatch:

jobs:
  build-linux-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check Contexts and Secrets
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "[Secrets]"
          echo "secrets.GITHUB_TOKEN = ${{ secrets.GITHUB_TOKEN }}"
          echo "secrets.CROWDIN_PERSONAL_TOKEN = ${{ secrets.CROWDIN_PERSONAL_TOKEN }}"
          echo "secrets.APP_ID = ${{ secrets.APP_ID }}"
          echo "secrets.APP_PRIVATE_KEY = ${{ secrets.APP_PRIVATE_KEY }}"

      - name: Checkout to '${{ github.ref }}'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Install the Prerequisites
        run: |
          sudo apt update
          sudo apt install \
            dvipng \
            fonts-noto-cjk \
            graphviz \
            imagemagick \
            latexmk \
            librsvg2-bin \
            python3 \
            python3-pip \
            python3-sphinx \
            python3-virtualenv \
            texlive-lang-chinese \
            texlive-xetex

      - name: Clone the Linux Kernel Repository
        run: |
          git clone --depth=1 --branch=v6.8 https://github.com/torvalds/linux.git linux

      - name: Build Linux Kernel Documentation
        run: |
          cd linux
          ./scripts/sphinx-pre-install
          # make htmldocs
          # cmd_sphinx = $(MAKE) BUILDDIR=$(abspath $(BUILDDIR)) $(build)=Documentation/userspace-api/media $2 && \
          # PYTHONDONTWRITEBYTECODE=1 \
          # BUILDDIR=$(abspath $(BUILDDIR)) SPHINX_CONF=$(abspath $(srctree)/$(src)/$5/$(SPHINX_CONF)) \
          # $(PYTHON3) $(srctree)/scripts/jobserver-exec \
          # $(CONFIG_SHELL) $(srctree)/Documentation/sphinx/parallel-wrapper.sh \
          # $(SPHINXBUILD) \
          # -b $2 \
          # -c $(abspath $(srctree)/$(src)) \
          # -d $(abspath $(BUILDDIR)/.doctrees/$3) \
          # -D version=$(KERNELVERSION) -D release=$(KERNELRELEASE) \
          # $(ALLSPHINXOPTS) \
          # $(abspath $(srctree)/$(src)/$5) \
          # $(abspath $(BUILDDIR)/$3/$4) && \
          # if [ "x$(DOCS_CSS)" != "x" ]; then \
          #   cp $(if $(patsubst /%,,$(DOCS_CSS)),$(abspath $(srctree)/$(DOCS_CSS)),$(DOCS_CSS)) $(BUILDDIR)/$3/_static/; \
          # fi
          sphinx-build \
          -b html \
          -c Documentation \
          -D version=6.8.0 \
          -D release=6.8.0 \
          -D kerneldoc_srctree=$(cwd) \
          -D kerneldoc_bin=$(cwd)/scripts/kernel-doc \
          $(cwd)/Documentation \
          $(cwd)/Documentation/output


      - name: Deploy to 'gh-pages' branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: ./linux/Documentation/output
          target-folder: .
          clean: false